	Создание своего проекта на GitHub
1. Создаем папку с проектом на компьтере
2. Открываем в папке консоль и инициализируем проект
	git init
3. Создаем файлы в нашем проекте и добавляем их к отслеживанию командой
	git add name-file либо git add .
4. Далее неоходимо закомитить изменения в наших файлах
	git commit -m "......."
5. Создаём файл .gitignore в корне нашего проекта (если он необходим)
6. Переходим на сайт https://github.com/ и регестрируемся
7. Далее выбираем Create a new repository, указываем Repository name (наш проект),
	Description (короткое описание), жмем Create repository
8. Копируем строчку:
	git remote add origin https://github.com/dtaradai/git-lern.git
   и вставляем ее в нашу консоль и жмем Enter
9. Пушим наши файлы в репозиторий GitHub:
	git push -u origin master

10. При необходимости указываем все необходимые пароли и доступы, требуемые GitHub и в нашей консоли

11. Обновляем страницу GitHub и смотрим что у нас добавилось в наш репозиторий
	

	Работа с репозиторием gitHub созданым другим человеком через git

1. git clone (ссылка) 		- скачивание ветки;
2. cd (название папки входа) 	- переход в скачанную папку;
3. git checkout -b (homework) 	- создаем и именуем новую ветку и сразу переходим в неё;
4. git branch  			- проверяемgit список веток (не обязательно);
4.1 git branch git checkout	- создание новой ветки newBranch в репозитории (при необходимости)
4.2 git checkout homework	- переходим в созданую ветку;
5. git add . 			- добавление файлов к отслеживанию;
6. git commit -m "......."	- добавляем коммит;
7. git pull origin nameBranch	- перед пушем необходимо скачать изменения, внесенные в главную ветку, и при неоходимости исправляем конфликты.
8. git push origin homework	- пушим наш проэкт в репозиторий;
9. 	- вводим пароль если запросит.

10. Переходим на страницу репозитория и выбираем нашу ветку (homework).
	Нажимаем кнопку 'Nev pull request', оставляем коментарий, 
	жмем 'Create pull request'.
	

		Общие команды GIT
git status 			- показывае, где мы сейчас находимся, и что происходит с файлами
git add . 			- добавление всех файлов к отслеживанию;
git rm --cached name-file	- снимает отслеживание с файла
git branch newBranch		- создание новой ветки newBranch в репозитории
git branch -D newBranch		- удаление ветки newBranch из репозитория
clear				- очистка консоли от записей
git merge newBranch		- выполняем в ветке master для слияния с веткой newBranch
git config --global user.name	- показывает имя текущего пользователя
git config --global user.email	- показывает email текущего пользователя
git config --global user.name "newName"	- изменение имени текущего пользователя


	Работа через vagrant
1. vagrant up 			- Запускаем варгамп
2. vagrant halt			- Корректное завершение работы виртуальной машины


	Запуск PHP через консоль
1. Открываем консоль в предыдущей папке нашего проекта и прописываем
	php -S localhost:4000
	

     Скачивание и настройка проэкта на операционной системе Linux

1. Создаем папку с нашим проэктом в директории var/www/new_project

    Для этого в консоле регистрируемя и заходим под правами  супер пользователя выполнив команду
        sudo su

    Далее вводим наш пароль(его не видно, вводим вслепую)
        [sudo] пароль для user: password

    Создаем новый репозиторий
        mkdir /var/www/new_project

    Переходим в созданный проект
        cd /var/www/new_project

2.    Клонирум наш репозиторий 
        git clone https://user@bitbucket.org/IgorOliynik/opencart-dev-3-version.git

    Вводим наш пароль для bitbucket (пароль не отображается)
        Password for 'https://user@bitbucket.org': password

    Наслаждаемся процессом скачивания, в конце должно отобразиться что то похожее:

    remote: Counting objects: 3909, done.
    remote: Compressing objects: 100% (3041/3041), done.
    remote: Total 3909 (delta 1595), reused 2699 (delta 770)
    Получение объектов: 100% (3909/3909), 5.79 MiB | 2.85 MiB/s, готово.
    Определение изменений: 100% (1595/1595), готово.


3.  Далее необходимо расширить права доступа к нашему сайту. 
    Для этого переходим на 1 папку выше:
        cd ../

    Указываем права доступа в зависимости от необходимости 
        chmod -R 777 new_project/
    
    Смотрим наличие прав и пользователей
        ls -l
    
    Делаем так, чтобы Git игнорировал изменения режима файла (chmod):
    	cd /var/www/new_project
    	git config core.fileMode false

4.  Далее настраиваем виртуальный хост для нашего сайта. Для этого выполняем команду подставив наш сайт:
    cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/new_project.conf

    Откроем новый конфигурационный файл нашего сайта:
    nano /etc/apache2/sites-available/new_project.conf

    В нем указываем:

    <VirtualHost *:80>
        ServerName new_project
        ServerAlias www.new_project
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/new_project
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

      <Directory /var/www/new_project>
        AllowOverride All
        Order Allow,Deny
        Allow from All
        Require all granted

        <IfModule mod_rewrite.c>
          Options Indexes FollowSymLinks
        </IfModule>
      </Directory>

    </VirtualHost>

    Cохраняем и выходим из файла.

    Активируем виртуальные хосты с помощью a2ensite:
    a2ensite new_project.conf

    Отключим виртуальный хост, который создается по умолчанию:
    a2dissite 000-default.conf

    Редактируем файл hosts:
    nano /etc/hosts

    Добавляем в список название нашего проекта
    127.0.0.1       localhost
    127.0.1.1       dmitrii-ThinkCentre-M82
    127.0.0.1       opencart
    127.0.0.1       phpmyadmin
    127.0.0.1       new_project

    Сохраняем и выходим из файла.

    Перезапускаем апач:
    systemctl reload apache2

5. Переходим в браузер и открываем наш сайт:
    http://new_project/

6.	Далее переходим в файл config.php и указываем правильно все пути к нашим файлам.
	Указываем правильное подключение к БД.
	То же  с admin->config.php
7. В каталоге system создаем storage->cache и storage->logs

8. Запись ошибок можно посмотреть в файле записи логов:
	less +G /var/log/apache2/error.log
	
9.	Выполняем подключение к БД. Дя этого создаем БД в PhpMyAdmin
	Переходим в папку с архивом БД и разархивируем его. Далее в этой папке открываем терминал и прописываем команду 
	sudo  mysql -u root -p eurokonus < euroconus_clear20210713.sql
заменив при этом название БД и файла, на соответствующие.

10. Если при переходе по ссылкам возникает 404 ошибка, возможно нужно добавить файл .htaccess
    Options +FollowSymlinks
    RewriteEngine On
    RewriteBase /
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^([^?]*) index.php?_route_=$1 [L,QSA]

  Если ошибка остается возможно не включен rewrite
    $ sudo a2enmod rewrite
    $ sudo systemctl restart apache2


Установка 2-х и более версий php:
sudo apt-get install software-properties-common -y
sudo add-apt-repository ppa:ondrej/php
sudo apt-get update -y
sudo apt-get install php5.6

Команды для переключения Apache:
sudo a2dismod phpX.X    - где X.X та версия php которая работает у вас сейчас в Apache
sudo a2enmod phpX.X     - где X.X та версия php которую требуется подключить к Apache (подключаемая версия должна быть установлена в системе)
Пример отключения версии 5.6 и включения версии 7.4
sudo a2dismod php5.6 && sudo a2enmod php7.4

Команда для перезапуска Apache2
sudo service apache2 restart

Для переключения CLI 
sudo update-alternatives --config php
Указываем номер с нужной нам версией.  
Перезапуск Apache2 не требуется
