	Создание своего проекта на GitHub
1. Создаем папку с проектом на компьтере
2. Открываем в папке консоль и инициализируем проект
	git init
3. Создаем файлы в нашем проекте и добавляем их к отслеживанию командой
	git add name-file либо git add .
4. Далее неоходимо закомитить изменения в наших файлах
	git commit -m "......."
5. Создаём файл .gitignore в корне нашего проекта (если он необходим)
6. Переходим на сайт https://github.com/ и регестрируемся
7. Далее выбираем Create a new repository, указываем Repository name (наш проект),
	Description (короткое описание), жмем Create repository
8. Копируем строчку:
	git remote add origin https://github.com/dtaradai/git-lern.git
   и вставляем ее в нашу консоль и жмем Enter
9. Пушим наши файлы в репозиторий GitHub:
	git push -u origin master

10. При необходимости указываем все необходимые пароли и доступы, требуемые GitHub и в нашей консоли

11. Обновляем страницу GitHub и смотрим что у нас добавилось в наш репозиторий
	

	Работа с репозиторием gitHub созданым другим человеком через git

1. git clone (ссылка) 		- скачивание ветки;
2. cd (название папки входа) 	- переход в скачанную папку;
3. git checkout -b (homework) 	- создаем и именуем новую ветку и сразу переходим в неё;
4. git branch  			- проверяемgit список веток (не обязательно);
4.1 git branch git checkout	- создание новой ветки newBranch в репозитории (при необходимости)
4.2 git checkout git checkout	- переходим в созданую ветку;
5. git add . 			- добавление файлов к отслеживанию;
6. git commit -m "......."	- добавляем коммит;
7. git push origin homework	- пушим наш проэкт в репозиторий;
8. 				- вводим пароль если запросит.

9. Переходим на страницу репозитория и выбираем нашу ветку (homework).
	Нажимаем кнопку 'Nev pull request', оставляем коментарий, 
	жмем 'Create pull request'.
	

		Общие команды GIT
git status 			- показывае, где мы сейчас находимся, и что происходит с файлами
git add . 			- добавление всех файлов к отслеживанию;
git rm --cached name-file	- снимает отслеживание с файла
git branch newBranch		- создание новой ветки newBranch в репозитории
git branch -D newBranch		- удаление ветки newBranch из репозитория
clear				- очистка консоли от записей
git merge newBranch		- выполняем в ветке master для слияния с веткой newBranch
git config --global user.name	- показывает имя текущего пользователя
git config --global user.email	- показывает email текущего пользователя
git config --global user.name "newName"	- изменение имени текущего пользователя


	Работа через vagrant
1. vagrant up 			- Запускаем варгамп
2. vagrant halt			- Корректное завершение работы виртуальной машины


	Запуск PHP через консоль
1. Открываем консоль в предыдущей папке нашего проекта и прописываем
	php -S localhost:4000
